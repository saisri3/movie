{"version":3,"sources":["components/FilmDetails/FilmDetails.js","components/Header/Header.js","components/AllFilms.js","components/Header/Search.js","components/Header/Sort.js","components/Add/Popup.js","components/Add/AddForm.js","App.js","reportWebVitals.js","index.js"],"names":["FilmDetails","props","className","src","process","film","image","height","width","title","year","rating","duration","Header","AllFilms","movieList","map","index","Search","htmlFor","type","id","placeholder","onChange","e","SearchFunction","target","value","Sort","onClick","SortBasedDuration","Popup","handleClose","content","AddForm","addNewMovie","useState","formData","setFormData","isOpen","setIsOpen","togglePopup","handleChange","name","Form","Group","controlId","Label","Control","App","data","setMovieList","sorter","obj1","obj2","order","setorder","sort","reverse","useEffect","searchterm","FilteredFilms","filter","toLowerCase","includes","new_movie","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37ecd5d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FilmDetails.css\";\r\n\r\nexport function FilmDetails(props) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <img\r\n        className=\"images\"\r\n        src={process.env.PUBLIC_URL + \"/images/\" + props.film.image}\r\n        height=\"100\"\r\n        width=\"180\"\r\n      />\r\n      <p className=\"title\">{props.film.title}</p>\r\n      <p className=\"year\">{props.film.year}</p>\r\n      <p className=\"rating\">{props.film.rating}</p>\r\n      <p className=\"duration\">{props.film.duration}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <p className=\"image_header\">IMAGE</p>\r\n      <p>TITLE</p>\r\n      <p>YEAR</p>\r\n      <p>RATING</p>\r\n      <p>DURATION</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import { FilmDetails } from \"./FilmDetails/FilmDetails\"\r\n\r\nexport default function AllFilms({ movieList }) {\r\n    return (\r\n        <div className=\"films\"  >\r\n        {movieList.map((film, index) => {\r\n          return (\r\n            < FilmDetails\r\n              key={index}\r\n              film={film}\r\n              \r\n            />)\r\n                })}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function Search(props) {\r\n  // const SearchFunction = (event) => {\r\n\r\n  //   searchterm=(event.target.value)\r\n  //   return searchterm;\r\n\r\n  // }\r\n\r\n  // console.log(searchterm,\"hii\")\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <form>\r\n        <label htmlFor=\"header-search\">\r\n          <span className=\"visually-hidden\">Search For LatestMovies</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"header-search\"\r\n          placeholder=\"Enter movie Name...\"\r\n          //  value ={searchterm}\r\n          onChange={(e) => props.SearchFunction(e.target.value)}\r\n        />\r\n\r\n        <button className=\"go\" type=\"submit\">\r\n          GO\r\n        </button>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"./sort.css\";\r\n\r\nexport default function Sort(props) {\r\n  return (\r\n    <div className=\"sort\">\r\n      {/* < button\r\n            style={{ height: 25, cursor: \"pointer\" }}\r\n            className=\"arrow\"    type=\"submit\">GO</button> */}\r\n      <button type=\"submit\" onClick={() => props.SortBasedDuration()}>\r\n        sort\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./Popup.css\"\n \nconst Popup = props => {\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n        {props.content}\n      </div>\n    </div>\n  );\n};\n \nexport default Popup;","import { useState } from \"react\";\r\nimport \"./Add_Form.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Popup from \"./Popup\";\r\n\r\nexport default function AddForm({ addNewMovie }) {\r\n  const [formData, setFormData] = useState({\r\n    image: \"\",\r\n    title: \"\",\r\n    year: \"\",\r\n    rating: \"\",\r\n    duration: \"\",\r\n  });\r\n\r\n  const { image, title, duration, year, rating } = formData;\r\n  const [isOpen, setIsOpen] = useState(false); //for popup of add\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    addNewMovie(formData);\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"button\" value=\"Add New Movie\" onClick={togglePopup} />\r\n      {/* {showForm ? <AddForm addNewMovie={addNewMovie} /> : null} */}\r\n\r\n      {isOpen && (\r\n        <Popup\r\n          content={\r\n            <>\r\n              <Form>\r\n                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                  <Form.Label>Select an Image</Form.Label>\r\n                  <Form.Control type=\"file\" onChange={(e) => handleChange(e)} />\r\n                </Form.Group>\r\n              </Form>\r\n              {/* <div>\r\n                <label id=\"label\">upload image</label>\r\n                <input\r\n                  name={\"image\"}\r\n                  value={image}\r\n                  onChange={(e) => handleChange(e)}\r\n                  type=\"text\"\r\n                />\r\n              </div> */}\r\n              <div>\r\n                <label id=\"label\">enter title</label>\r\n                <input\r\n                  name={\"title\"}\r\n                  value={title}\r\n                  onChange={(e) => handleChange(e)}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label id=\"label\">enter year</label>\r\n                <input\r\n                  name={\"year\"}\r\n                  value={year}\r\n                  onChange={(e) => handleChange(e)}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label id=\"label\">enter rating</label>\r\n                <input\r\n                  name={\"rating\"}\r\n                  value={rating}\r\n                  onChange={(e) => handleChange(e)}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label id=\"label\">enter duration</label>\r\n                <input\r\n                  name={\"duration\"}\r\n                  value={duration}\r\n                  onChange={(e) => handleChange(e)}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n\r\n              <button onClick={handleSubmit}> Add Movie</button>\r\n            </>\r\n          }\r\n          handleClose={togglePopup}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport \"./components/FilmDetails/FilmDetails.css\";\r\nimport data from \"./components/MOCK_DATA\";\r\nimport { FilmDetails } from \"./components/FilmDetails/FilmDetails\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./components/Header/Search.css\";\r\nimport AllFilms from \"./components/AllFilms\";\r\nimport Search from \"./components/Header/Search\";\r\nimport Sort from \"./components/Header/Sort\";\r\nimport { Add } from \"./components/Add/Add\";\r\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\r\nimport { AiOutlineArrowUp } from \"react-icons/ai\";\r\nimport AddForm from \"./components/Add/AddForm\";\r\n\r\nfunction App() {\r\n  let [movieList, setMovieList] = useState(data);\r\n  // let [searchterm, set_searchterm] = useState(\"\")\r\n\r\n  const sorter = (obj1, obj2) => {\r\n    return obj1.duration < obj2.duration\r\n      ? -1\r\n      : obj1.duration > obj2.duration\r\n      ? 1\r\n      : 0;\r\n  };\r\n\r\n  const addNewMovie = (new_movie) => {\r\n    setMovieList([...movieList, new_movie]);\r\n  };\r\n\r\n  const [order, setorder] = useState(\"\");\r\n  const SortBasedDuration = () => {\r\n    //if order ==== '' sort it in ascending order setOrder\r\n    //else if order ==== 'ascending' sort it in 'descending' order and change the order using setOrder.\r\n    //else sort it in ascending order and setOrder\r\n    if (order === \"\") {\r\n      setMovieList(movieList.sort(sorter));\r\n      setorder(\"ascending\");\r\n    } else if (order === \"ascending\") {\r\n      setMovieList(\r\n        movieList\r\n          .sort((obj1, obj2) => {\r\n            return obj1.duration < obj2.duration\r\n              ? -1\r\n              : obj1.duration > obj2.duration\r\n              ? 1\r\n              : 0;\r\n          })\r\n          .reverse()\r\n      );\r\n      setorder(\"descending\");\r\n    } else {\r\n      setMovieList(movieList.sort(sorter));\r\n      setorder(\"ascending\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    SortBasedDuration();\r\n  }, [movieList]);\r\n\r\n  const SearchFunction = (searchterm) => {\r\n    const FilteredFilms = movieList.filter((movieList) => {\r\n      // console.log(movieList.title)\r\n      return movieList.title.toLowerCase().includes(searchterm.toLowerCase());\r\n    });\r\n    setMovieList(FilteredFilms);\r\n  };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   const FilteredFilms = movieList.filter(movieList=> {\r\n  //     console.log(movieList.title)\r\n  //     return movieList.title.toLowerCase().includes(searchterm.toLowerCase())\r\n  // })\r\n\r\n  //   set_movieList(FilteredFilms)\r\n  // }, [searchterm])\r\n  // console.log(movieList);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Sort SortBasedDuration={SortBasedDuration} />\r\n      <div className=\"arrows\">\r\n        {order === \"ascending\" ? <AiOutlineArrowDown /> : <AiOutlineArrowUp />}\r\n      </div>\r\n      <Header />\r\n      <Search SearchFunction={SearchFunction} />\r\n      <AllFilms movieList={movieList} />\r\n      <AddForm addNewMovie={addNewMovie} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}